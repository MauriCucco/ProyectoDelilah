openapi: 3.0.1
info:
  title: Delilah Restó
  description: Documentación de la API REST de Delilah Restó.
  contact:
    email: delilahdev@gmail.com
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
- url: https://delilah.resto.com.ar/
- url: http://delilah.resto.com.ar/
tags:
- name: usuario
  description: Operaciones relacionadas con los usuarios
- name: pedido
  description: Acceso a la informacion de los pedidos
- name: plato
  description: Información sobre los platos ofrecidos
- name: administrador
  description: Operaciones que puede realizar el administrador
paths:
  /platos:
    get:
      tags:
      - plato
      summary: Obtener todos los platos del menú
      description: Devuelve un listado con la información de la totalidad de los platos que Delilah Restó ofrece al público.
      operationId: obtenerPlatos
      responses:
        200:
          description: Operación exitosa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetListaPlatos'
        401:
          description: No se encontró ningún token de autorización
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - bearerAuth: []
  /pedidos:
    post:
      tags:
      - pedido
      summary: Subir un pedido nuevo
      description: Se sube el pedido de un usuario con el/los plato/s requeridos y la información de la transacción.
      operationId: subirPedido
      requestBody:
        description: Objeto con la información del pedido de un determinado cliente
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pedido'
        required: true
      responses:
        200:
          description: Operacion exitosa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExitoPedido'
        401:
          description: No se encontró ningún token de autorización
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        422:
          description: Formulario del pedido incompleto y/o con errores
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exito'
      security:
      - bearerAuth: []
      x-codegen-request-body-name: body
  /pedidos/estado:
    post:
      tags:
      - pedido
      summary: Obtener el estado de un pedido
      description: El pedido puede estar confirmado, en preparación, en camino o entregado.
      operationId: obtenerEstado
      requestBody:
        description: Objeto con el ID del pedido
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdPedido'
        required: true
      responses:
        200:
          description: Operación exitosa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EstadoPedido'
        401:
          description: No se encontró ningún token de autorización
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Pedido no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        422:
          description: El id del pedido es inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - bearerAuth: []
  /platos/favoritos:
    get:
      tags:
      - plato
      summary: Obtener platos favoritos de un usuario
      description: Devuelve una lista con los platos previamente pedidos por un determinado usuario
      operationId: obtenerPlatosFav
      responses:
        200:
          description: Operación exitosa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPlatosFavoritos'
        401:
          description: No se encontró ningún token de autorización
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: No se encontraron platos favoritos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - bearerAuth: []
  /usuarios/registro:
    post:
      tags:
      - usuario
      summary: Crear un usuario nuevo
      description: Para poder registrarse, el usuario debe ingresar username, nombre completo, email, telefono, direccion y password. El username debe tener entre 4 y 36 caracteres de tipo alfanumérico y/o guión bajo o guión medio. El password debe tener entre 6 y 36 caracteres con al menos 1 letra (minúscula o mayúscula), 1 número y 1 caracter especial.
      operationId: crearUsuario
      requestBody:
        description: Objeto nuevo usuario
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Usuario'
        required: true
      responses:
        200:
          description: Registro exitoso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exito'
        422:
          description: Formulario inválido o usuario no disponible
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /usuarios/login:
    post:
      tags:
      - usuario
      summary: Loguear a un usuario
      description: Una vez registrado, el usuario debe loguearse ingresando username o email y password. Si la operación es exitosa, le será devuelto un token de autorización para próximas operaciones.
      operationId: loginUsuario
      requestBody:
        description: Objeto con los datos del login del usuario
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      responses:
        200:
          description: Operación exitosa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogInExitoso'
        401:
          description: Usuario no econtrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        422:
          description: Formulario inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /usuarios/delete:
    put:
      tags:
      - usuario
      summary: Eliminar un usuario
      description: Elimina al usuario previamente logueado.
      operationId: actualizarUsuario
      responses:
        200:
          description: Operación exitosa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exito'
        401:
          description: No se encontró ningún token de autorización
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - bearerAuth: []
      x-codegen-request-body-name: body
  /admin:
    get:
      tags:
      - administrador
      summary: Obtener información para el administrador
      description: Devuelve un array con toda la información de los pedidos realizados por distintos clientes.
      operationId: infoAdmin
      responses:
        200:
          description: Operación exitosa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListaAdmin'
        401:
          description: No posee autorización de administrador
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - bearerAuth: []
  /admin/plato:
    post:
        tags:
        - administrador
        summary: Subir nuevo plato
        description: Agrega un nuevo plato a la base de datos.
        operationId: subirPlato
        requestBody:
          description: Objeto plato
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plato'
          required: true
        responses:
          200:
            description: Operacion exitosa
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Exito'
          401:
            description: No posee autorización de administrador
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          422:
            description: Formulario del plato incompleto y/o con errores
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          500:
            description: Error del servidor
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Exito'
        security:
        - bearerAuth: []
        x-codegen-request-body-name: body
  /admin/plato/{IdPlato}:
    put:
      tags:
      - administrador
      summary: Actualizar un plato
      description: Actualiza el nombre, el precio y/o el estado de un plato existente del menú.
      operationId: actualizarPlato
      parameters:
      - name: IdPlato
        in: path
        description: ID del plato buscado
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Objeto plato
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlatoActualizado'
        required: true
      responses:
        200:
          description: Operación exitosa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exito'
        401:
            description: No posee autorización de administrador
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
        404:
          description: Plato no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - bearerAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - administrador
      summary: Eliminar un plato
      description: Elimina (físicamente) un plato de la base de datos por su ID.
      parameters:
      - name: IdPlato
        in: path
        description: ID del plato
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Operación exitosa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exito'
        401:
            description: No posee autorización de administrador
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
        404:
          description: Plato no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /admin/pedido/estado/{IdPedido}:
    put:
      tags:
      - administrador
      summary: Actualiza el estado de un pedido
      description: Actualiza el estado de un pedido a nuevo, en preparación, en camino, entregado o cancelado.
      operationId: actualizarPedido
      parameters:
      - name: IdPedido
        in: path
        description: ID del pedido
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Objeto con el estado nuevo del pedido
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EstadoPedido'
        required: true
      responses:
        200:
          description: Operación exitosa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exito'
        401:
            description: No posee autorización de administrador
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
        404:
          description: Pedido no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        422:
          description: Valor ingresado inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - bearerAuth: []
      x-codegen-request-body-name: body
  /admin/pedido/{IdPedido}:
    delete:
      tags:
      - administrador
      summary: Eliminar un pedido
      description: Elimina (físicamente) un pedido de la base de datos por su ID.
      parameters:
      - name: IdPedido
        in: path
        description: ID del pedido
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Operación exitosa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exito'
        401:
            description: No posee autorización de administrador
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
        404:
          description: Pedido no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  securitySchemes:
    bearerAuth:            
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    ListaAdmin:
      type: array
      items:
          $ref: "#/components/schemas/PedidoAdmin"
    PedidoAdmin:
      type: object
      properties:
        estado_pedido:
          type: string
          description: Estado del pedido
          enum:
          - nuevo
          - en preparación
          - en camino
          - entregado
          - cancelado
        fecha: 
          type: string
        id_pedido: 
          type: number
        descripcion:
          type: string
        tipo_pago: 
          type: string
          description: Tipo de pago utilizado por el cliente
          enum:
          - efectivo
          - debito
          - credito
        total:
          type: number
        username:
          type: string
        nombre_completo:
          type: string
        email:
          type: string
        telefono:
          type: string
        direccion:
          type: string
    Login:
      type: object
      properties:
        username_o_email:
          type: string
          description: Username o email
        password:
          type: string
    Usuario:
      type: object
      properties:
        username:
          type: string
          minimum: 4 
          maximum: 36
        nombre_completo:
          type: string
        email:
          type: string
        telefono:
          type: string
        direccion:
          type: string
        password:
          type: string
          format: password
          minimum: 6 
          maximum: 36
    Cantidad:
      type: object
      properties:
        id_plato1:
          type: integer
        cantidad:
          type: integer
    Pedido:
      type: object
      properties:
        descripcion:
          type: array
          items:
            $ref: '#/components/schemas/Cantidad'
        tipo_pago:
          type: string
          description: Tipos de pago disponbles
          enum:
          - efectivo
          - debito
          - credito
        total:
          type: number
    Plato:
      type: object
      properties:
        nombre_plato:
          type: string
        precio:
          type: number
    PlatoActualizado:
      type: object
      properties:
        nombre_plato:
          type: string
        precio:
          type: number
        estado_plato:
          type: string
          description: Estado del plato
          enum:
          - H
          - E
    GetListaPlatos:
      type: object
      properties:
        platos:
          $ref: '#/components/schemas/ListaPlatos'
    GetPlatosFavoritos:
      type: object
      properties:
        favoritos:
          $ref: '#/components/schemas/ListaPlatos'
    LogInExitoso:
      type: object
      properties:
        mensaje:
          type: string
        token:
          type: string
        nombre_completo:
          type: string  
        direccion:
          type: string
        administrador:
          type: boolean
    ListaPlatos:
      type: array
      items:
        $ref: '#/components/schemas/Plato'
    Error:
      type: object
      properties:
        error:
          type: string
    Exito:
      type: object
      properties:
        mensaje:
          type: string
    ExitoPedido:
      type: object
      properties:
        mensaje:
          type: string
        id_pedido:
          type: integer
    IdPedido:
      type: object
      properties:
        id_pedido:
          type: integer
    EstadoPedido:
      type: object
      properties:
        estado_pedido:
          type: string
          description: Estado del pedido
          enum:
          - confirmado
          - preparando
          - enviando
          - entregado
          - cancelado